library(moonBook2)
ratetable.kor
library(moonBook2)
ggChoropleth(data3,kormap3,fillvar="총인구_명",subarea=c("전라","광주"),interactive=TRUE)
kormap2014_1=readRDS("kormap2014_1.RDS")
kormap2014_1=readRDS("kormap2014_1.RDS")
kormap2014_2=readRDS("kormap2014_2.RDS")
kormap2014_3=readRDS("kormap2014_3.RDS")
areacode2014=read.csv("areacode2014.csv")
devtools::use_data(kormap2014_1)
devtools::use_data(kormap2014_2)
devtools::use_data(kormap2014_3)
korpop2014_1=readRDS("korpop2014_1.RDS")
korpop2014_2=readRDS("korpop2014_2.RDS")
devtools::use_data(korpop2014_1)
devtools::use_data(korpop2014_2)
devtools::use_data(areacode2014)
str(kormap2014_1)
str(kormap2014_2)
str(kormap2014_3)
str(areacode2014)
colnames(areacode2014)=c("code","name","name1")
devtools::use_data(areacode2014)
devtools::use_data(areacode2014,overwrite=TRUE)
library(moonBook2)
devtools::document()
library(moonBook2)
ggChoropleth(korpop2014_1,kormap2014_1)
library(moonBook2)
require(moonBook)
ggScatter(weight~height,data=acs)
require(ggplot2)
ggScatter(weight~height,data=acs,interactive =TRUE)
library(moonBook2)
ggScatter(weight~height,data=acs,interactive =TRUE)
ggScatter(weight~height,colorvar="Dx",data=acs,interactive =TRUE)
ggScatter(weight~height,data=acs,interactive =TRUE)
mtcars
mtcars$name=rownames(mtcars)
ggScatter(mpg~weight,data=mtcars,tooltip="name")
library(moonBook2)
ggScatter(mpg~weight,data=mtcars,tooltip="name")
mtcars
ggScatter(mtcars,xvar="wt",yvar="mpg",tooltip="name",interactive=TRUE)
ggScatter(mpg~weight,data=mtcars,tooltip="name")
library(moonBook2)
ggScatter(mpg~weight,data=mtcars,tooltip="name")
library(moonBook2)
ggScatter(mpg~weight,data=mtcars,tooltip="name")
ggScatter(mpg~wt,data=mtcars,tooltip="name")
ggScatter(mpg~wt,data=mtcars,tooltip="name",interactive=TRUE)
ggScatter(mpg~wt,data=mtcars,interactive=TRUE)
ggChoropleth(areacode,kormap2014_1)
ggChoropleth(areacode,kormap2014_1,fill="name")
ggChoropleth(areacode,kormap2014_1,fill="name",interactive=TRUE)
korpop2015_1=readRDS("korpop2015_1.RDS")
korpop2015_2=readRDS("korpop2015_2.RDS")
korpop2015_3=readRDS("korpop2015_3.RDS")
devtools::use_data(korpop2015_1)
devtools::use_data(korpop2015_2)
devtools::use_data(korpop2015_3)
nrow(kormap2014_1)
library(moonBook2)
nrow(kormap2014_1)
nrow(kormap2014_2)
nrow(kormap2014_3)
nrow(korpop2015_1)
ncol(korpop2015_1)
ncol(korpop2015_2)
nrow(korpop2015_2)
nrow(korpop2015_3)
nrow(korpop2015_3)
korpop2015_3=readRDS("korpop2015_3")
korpop2015_3=readRDS("korpop2015_3.RDS")
nrow(korpop2015_3)
devtools::use_data(korpop2015_3)
nrow(korpop2015_3)
devtools::document()
devtools::document()
library(moonBook2)
library(moonBook2)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(moonBook2)
require(kormaps2014)
areacode
ggChoropleth(areacode,kormap1)
library(moonBook2)
ggChoropleth(areacode,kormap1)
library(ggplot2)
ggChoropleth(areacode,kormap1)
ggChoropleth(areacode,kormap1,"code")
library(moonBook2)
ggChoropleth(korpop2015_1,kormap1)
library(kormaps2014)
ggChoropleth(korpop2015_1,kormap1)
library(ggplot2)
ggChoropleth(korpop2015_1,kormap1)
ggChoropleth(korpop2015_1,kormap1,interactive=TRUE)
library(moonBook2)
library(moonBook2)
library(kormaps2014)
ggChoropleth(korpopdata2015_1,kormap1)
ggChoropleth(korpop2015_1,kormap1)
require(ggplot2)
ggChoropleth(korpop2015_1,kormap1)
ggChoropleth(areacode,kormap1,fillvar="code")
data=areacode; map<-kormap1;fillvar="code"
colors=c('white','orange','red');palette=NULL;
map_id="code";tooltip=NULL;facetvar=NULL;subarea=NULL;title="";digits=1;interactive=FALSE
data$data_id=data[[map_id]]
if(is.null(tooltip)) {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[map_id]],"<br>",
fillvar,"<br>",data[[fillvar]])
} else {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[tooltip]],"<br>",fillvar,"<br>",data[[fillvar]])
}
mycolors=colors
tooltip_css <- "background-color:white;font-style:italic;padding:10px;border-radius:20px 20px 20px 20px;"
p<-ggplot(data=data,aes_string(map_id=map_id,fill=fillvar,
data_id="data_id",tooltip="tooltip"))+
expand_limits(x=map$long,y=map$lat)+coord_map()
p<-p+geom_map_interactive(map=map,colour='black',size=0.1)
require(ggiraph)
p<-p+geom_map_interactive(map=map,colour='black',size=0.1)
p
p<-ggiraph(code=print(p),tooltip_extra_css = tooltip_css,zoom_max=10)
p
devtools::install_github('davidgohel/ggiraph')
ggChoropleth(areacode,kormap1,fillvar="code")
library(moonBook2)
ggChoropleth(areacode,kormap1,fillvar="code")
library(kormaps2014)
ggChoropleth(areacode,kormap1,fillvar="code")
library(ggplot2)
ggChoropleth(areacode,kormap1,fillvar="code")
ggChoropleth(areacode,kormap1,fillvar="code",interactive=FALSE)
ggChoropleth(korpop2015_1,kormap1)
str(korpop2015_1)
devtools::install_github("cardiomoon/kormap2014")
devtools::install_github("cardiomoon/kormaps2014")
reqiure(kormaps2014)
require(kormaps2014)
require(kormaps2014)
require(moonBook2)
require(ggplot2)
ggChoropleth(korpop3,kormap3)
ggChoropleth(korpop3,kormap3,subarea=c("전라"))
subarea="전라"
data=subdata(korpop3,subarea)
map=subdata(kormap3,subarea)
subdata <- function(data,area){
code<-area2code(area)
if(length(code)>0) {
code1=paste0("^",code)
temp=Reduce(paste_or,code1)
mydata<-data[grep(temp,data$code),]
mydata
}
}
data=subdata(korpop3,subarea)
is.integer0 <- function(x) { is.integer(x) && length(x) == 0L}
#' Paste '|' between vectors
#' @param ... one or more R objects, to be converted to character vectors.
paste_or <- function(...) {
paste(...,sep="|")
}
#' Seek area from data areacode and returns the code
#'
#' @param area a string looking for
#'
#' @return a code if the area is found, else returns NA
area2code <- function(area){
result<-c()
for(i in 1:length(area)){
pos<-grep(area[i],areacode[[2]])
if(!is.integer0(pos)) temp<-areacode[pos,1]
else {
pos<-grep(area[i],areacode[[3]])
if(!is.integer0(pos)) temp<-areacode[pos,1]
}
result=c(result,temp)
}
result
}
data=subdata(korpop3,subarea)
map=subdata(kormap3,subarea)
ggChoropleth(korpop3,kormap3,subarea=c("전라"))
data=korpop3;map=kormap3
fillvar="총인구_명";subarea=c("전라","광주");interactive=TRUE
colors=c('white','orange','red');palette=NULL
map_id="code";tooltip=NULL;facetvar=NULL;title="";digits=1
if(!is.null(subarea)) {
data=subdata(data,subarea)
map=subdata(map,subarea)
}
data$data_id=data[[map_id]]
if(is.null(tooltip)) {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[map_id]],"<br>",
fillvar,"<br>",data[[fillvar]])
} else {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[tooltip]],"<br>",fillvar,"<br>",data[[fillvar]])
}
mycolors=colors
tooltip_css <- "background-color:white;font-style:italic;padding:10px;border-radius:20px 20px 20px 20px;"
p<-ggplot(data=data,aes_string(map_id=map_id,fill=fillvar,
data_id="data_id",tooltip="tooltip"))+
expand_limits(x=map$long,y=map$lat)+coord_map()
p<-p+geom_map_interactive(map=map,colour='black',size=0.1)
require(ggiraph)
p<-p+geom_map_interactive(map=map,colour='black',size=0.1)
if(is.numeric(data[[fillvar]])) {
p<-p+scale_fill_gradientn(colours=mycolors)
} else {
if(is.null(palette)) {
p<-p+scale_colour_gradientn(colours=mycolors)
} else {
p<-p+scale_fill_brewer(palette)
}
}
if(!is.null(facetvar)) p<-p+facet_wrap(facetvar)
if(title!="") p<-p+ ggtitle(title)
if(interactive) p<-ggiraph(code=print(p),tooltip_extra_css = tooltip_css,zoom_max=10)
p
fillvar="총인구_명";subarea=c("전라","광주");interactive=FALSE
p
data=korpop3;map=kormap3
fillvar="총인구_명";subarea=c("전라","광주");interactive=FALSE
colors=c('white','orange','red');palette=NULL
map_id="code";tooltip=NULL;facetvar=NULL;title="";digits=1
if(!is.null(subarea)) {
data=subdata(data,subarea)
map=subdata(map,subarea)
}
data$data_id=data[[map_id]]
if(is.null(tooltip)) {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[map_id]],"<br>",
fillvar,"<br>",data[[fillvar]])
} else {
if(is.numeric(data[[fillvar]])) data[[fillvar]]=round(data[[fillvar]],digits)
data$tooltip=paste0(data[[tooltip]],"<br>",fillvar,"<br>",data[[fillvar]])
}
mycolors=colors
tooltip_css <- "background-color:white;font-style:italic;padding:10px;border-radius:20px 20px 20px 20px;"
p<-ggplot(data=data,aes_string(map_id=map_id,fill=fillvar,
data_id="data_id",tooltip="tooltip"))+
expand_limits(x=map$long,y=map$lat)+coord_map()
p<-p+geom_map_interactive(map=map,colour='black',size=0.1,...)
#require(ggiraph)
p<-p+geom_map_interactive(map=map,colour='black',size=0.1)
if(is.numeric(data[[fillvar]])) {
p<-p+scale_fill_gradientn(colours=mycolors)
} else {
if(is.null(palette)) {
p<-p+scale_colour_gradientn(colours=mycolors)
} else {
p<-p+scale_fill_brewer(palette)
}
}
if(!is.null(facetvar)) p<-p+facet_wrap(facetvar)
if(title!="") p<-p+ ggtitle(title)
p
p
p
str(data)
str(map)
library(moonBook2)
require(moonBook)
require(moonBook)
str(radial)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",interactive=TRUE)
library(moonBook2)
library(moonBook2)
require(moonBook)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",interactive=TRUE)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",addloess=TRUE,interactive=TRUE)
ggScatter(NTAV~age,data=radial,addloess=TRUE,interactive=TRUE)
ggScatter(NTAV~age|smoking,data=radial,fullrange=TRUE,se=FALSE,interactive=TRUE)
require(ggplot2)
ggScatter(NTAV~age,data=radial,addloess=TRUE,interactive=TRUE)
ggScatter(NTAV~age|smoking,data=radial,fullrange=TRUE,se=FALSE,interactive=TRUE)
ggScatter(NTAV~age,data=radial,addloess=TRUE,interactive=TRUE)
ggScatter(NTAV~age|smoking,data=radial,fullrange=TRUE,se=FALSE,interactive=TRUE)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",interactive=TRUE)
library(moonBook2)
library(moonBook2)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",interactive=TRUE)
ggScatter(radial,xvar="height",yvar="weight",colorvar="sex",addloess=TRUE,interactive=TRUE)
ggScatter(NTAV~age|smoking,data=radial,fullrange=TRUE,se=FALSE,interactive=TRUE)
ggScatter(NTAV~age|DM,data=radial,fullrange=TRUE,se=FALSE,interactive=TRUE)
library(moonBook2)
library(moonBook2)
library(moonBook2)
library(moonBook2)
library(moonBook2)
ggEffect(NTAV~age*smoking,data=radial,interactive=TRUE)
ggEffect(NTAV~age*DM,data=radial,interactive=TRUE)
ggEffect(NTAV~age*factor(DM),data=radial,interactive=TRUE)
ggEffect(NTAV~age*DM,data=radial,interactive=TRUE)
ggScatter(radial,xvar="age",yar="NTAV",colorvar="DM")
ggScatter(radial,xvar="age",yvar="NTAV",colorvar="DM")
ggScatter(radial,xvar="age",yvar="NTAV",colorvar="DM",interactive=TRUE)
ggEffect(NTAV~age*smoking,data=radial,interactive=TRUE)
ggEffect(NTAV~age*DM,data=radial,interactive=TRUE)
