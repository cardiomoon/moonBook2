{
    "collab_server" : "",
    "contents" : "require(ggplot2)\nrequire(plyr)\nrequire(moonBook)\nrequire(ggiraph)\n\n#'Browser market share 2011\n#'\n#'A phony dataset measuring browser market share\n#'\n#'  @format A data.frame with 12 rows and 3 columns\n#'  \\describe{\n#'     \\item{browser}{browser}\n#'     \\item{version}{browser version}\n#'     \\item{share}{market share, in percentage}\n#'}\n\"browsers\"\n\n#'Rose sales among 7 groups in a year\n#'\n#'A phony dataset representing rose sales\n#'\n#'  @format A data.frame with 84 rows and 3 columns\n#'  \\describe{\n#'     \\item{group}{group A to G}\n#'     \\item{Month}{Month 1 to 12}\n#'     \\item{value}{Rose sales amount}\n#'}\n\"rose\"\n\n#'Draw a Pie and Donut plot\n#'@param data A data.frame\n#'@param pies A character string of column name be assigned to the Pies\n#'@param donuts A character string of column name be assigned to the Donuts\n#'@param count A character string of column name uses as count\n#'@param addPieLabel A logical value. If TRUE, labels are added to the Pies\n#'@param addDonutLabel A logical value. If TRUE, labels are added to the Donuts\n#'@param showRatioDonut A logical value. If TRUE, Ratios are added to the DonutLabels\n#'@param showRatioPie A logical value. If TRUE, Ratios are added to the PieLabels\n#'@param showRatioPieAbove10 A logical value. If TRUE, labels are added to the Pies with ratio above 10.\n#'@param title Plot title\n#'@param labelposition A number indicating the label position\n#'@param polar A logical value. If TRUE, coord_polar() function will be added\n#'@param interactive A logical value. If TRUE, an interactive plot will be returned\n#'\n#'@return An interactive Pie and Donut plot\n#'@examples\n#'#ggPieDonut(mtcars,\"am\",\"cyl\")\n#'#p<-ggPieDonut(mtcars,\"am\",\"cyl\")\n#'#ggiraph(code=print(p))\n#'#ggPieDonut(polar=FALSE)\n#'#ggPieDonut(labelposition=0)\n#'#ggPieDonut(interactive=TRUE)\n#'#ggPieDonut(mtcars,\"cyl\",\"am\")\n#'#ggPieDonut(browsers,\"browser\",\"version\",\"share\", title=\"Browser market share 2011\",interactive=TRUE)\nggPieDonut=function(data=acs,pies=\"Dx\",donuts=\"smoking\",count=NULL,\n                    addPieLabel=TRUE,addDonutLabel=TRUE,\n                    showRatioDonut=TRUE,showRatioPie=TRUE,\n                    showRatioPieAbove10=TRUE,title=\"\",\n                    labelposition=1, polar=TRUE,interactive=FALSE){\n\n        pies=as.character(substitute(pies))\n        donuts=as.character(substitute(donuts))\n        if(is.null(count)){\n                dat1=ddply(data,c(pies,donuts),nrow)\n                colnames(dat1)[3]=\"n\"\n\n                dat1$ymax=cumsum(dat1$n)\n                dat1$ymin=cumsum(dat1$n)-dat1$n\n                dat1$ypos=dat1$ymin+dat1$n/2\n                dat1$ratio=dat1$ypos*100/sum(dat1$n)\n                dat1$hjust=ifelse((dat1$ratio>25 & dat1$ratio<75),0,1)\n                dat1$label=paste0(dat1[[pies]],'<br>',dat1[[donuts]],\"<br>\",dat1$n,\"(\",round(dat1$ratio,1),\"%)\")\n\n                #print(dat1)\n\n                data2=ddply(data,pies,nrow)\n                colnames(data2)[2]=\"sum\"\n                #data2=data2[order(data2$sum,decreasing=TRUE),]\n                data2$cumsum=cumsum(data2$sum)\n                data2$pos=data2$cumsum-data2$sum/2\n                data2$ymin=data2$cumsum-data2$sum\n                data2$ratio=data2$sum*100/sum(data2$sum)\n                data2$label=ifelse(data2$ratio>10,\n                                   paste0(data2[[pies]],\"<br>\",data2$sum,\"(\",round(data2$ratio,1),\"%)\"),\n                                   paste0(data2[[pies]]))\n                data2$tooltip=paste0(data2[[pies]],\"<br>\",data2$sum,\"(\",round(data2$ratio,1),\"%)\")\n                #print(data2)\n\n        } else{\n                dat1=data\n                colnames(dat1)[colnames(dat1)==count]=\"n\"\n                dat1$ymax=cumsum(dat1$n)\n                dat1$ymin=cumsum(dat1$n)-dat1$n\n                dat1$ypos=dat1$ymin+dat1$n/2\n                dat1$ratio=dat1$n*100/sum(dat1$n)\n                dat1$cumratio=dat1$ypos*100/sum(dat1$n)\n                dat1$hjust=ifelse((dat1$cumratio>25 & dat1$cumratio<75),0,1)\n                dat1$label=paste0(dat1[[pies]],\"<br>\",dat1[[donuts]],\"<br>\",dat1$n,\"(\",round(dat1$ratio,1),\"%)\")\n\n\n                #print(dat1)\n\n                data2=ddply(dat1,pies,summarize,sum(n))\n                colnames(data2)[2]=\"sum\"\n                data2=data2[order(data2$sum,decreasing=TRUE),]\n                data2$cumsum=cumsum(data2$sum)\n                data2$pos=data2$cumsum-data2$sum/2\n                data2$ymin=data2$cumsum-data2$sum\n                data2$ratio=data2$sum*100/sum(data2$sum)\n                data2$label=ifelse(data2$ratio>10,\n                                   paste0(data2[[pies]],\"<br>\",data2$sum,\"(\",round(data2$ratio,1),\"%)\"),\n                                   paste0(data2[[pies]]))\n                data2$tooltip=paste0(data2[[pies]],\"<br>\",data2$sum,\"(\",round(data2$ratio,1),\"%)\")\n                #print(data2)\n\n\n        }\n        mainCol=rainbow(nrow(data2))\n        subCol=subcolors(dat1,pies,mainCol)\n        #subCol\n        p<-ggplot(dat1) +\n                geom_rect_interactive(aes_string( ymax=\"ymax\", ymin=\"ymin\", xmax=\"4\", xmin=\"3\",\n                                                  tooltip=\"label\",data_id=donuts),fill=subCol,colour=\"white\")+\n\n                geom_rect_interactive(aes_string(ymax=\"cumsum\", ymin=\"ymin\", xmax=\"3\", xmin=\"0\",\n                                                 tooltip=\"tooltip\",data_id=pies),data=data2,\n                          fill=mainCol,colour=\"white\",alpha=0.7) +\n                theme_clean()\n\n        if(addDonutLabel) {\n                label2=dat1[[donuts]]\n                if(showRatioDonut)\n                        label2=paste0(label2,\"\\n(\",round(dat1$ratio,1),\"%)\")\n                if(polar){\n                        if(labelposition==1) {\n                                p<- p+ geom_text(aes(label=label2,x=4.3,y=ypos,hjust=hjust),size=3)+\n                                        geom_segment(aes(x=4,xend=4.2,y=ypos,yend=ypos))\n                        }  else{\n                                p<- p+ geom_text(aes(label=label2,x=3.5,y=ypos),size=3)\n                        }\n                } else{\n                        p<-p+ geom_text(aes(label=label2,x=3.5,y=ypos),size=3)\n\n                }\n\n        }\n        if(addPieLabel) {\n            Pielabel=data2[[pies]]\n            if(showRatioPie) {\n                if(showRatioPieAbove10) {\n                    Pielabel=ifelse(data2$ratio>10,\n                                       paste0(data2[[pies]],\"\\n(\",round(data2$ratio,1),\"%)\"),\n                                       paste0(data2[[pies]]))\n                }\n                else Pielabel=paste0(Pielabel,\"\\n(\",round(data2$ratio,1),\"%)\")\n            }\n            p<-p+geom_text(data=data2,aes(label=Pielabel,x=1.5,y=pos),size=4)\n        }\n        if(polar) p<-p+coord_polar(theta=\"y\",start=3*pi/2)\n        if(title!=\"\") p<-p+ggtitle(title)\n        if(interactive) p<-ggiraph(code=print(p))\n        p\n\n}\n\n#'Draw a Donut plot\n#'@param data A data.frame\n#'@param donuts A character string of column name be assigned to the Donuts\n#'@param count A character string of column name uses as count\n#'@param addDonutLabel A logical value. If TRUE, labels are added to the Donuts\n#'@param showRatio A logical value. If TRUE, Ratios are added to the DonutLabels\n#'@param polar A logical value. If TRUE, coord_polar() function will be added\n#'@param labelposition A number indicating the label position\n#'@param title Plot title\n#'@param interactive A logical value. If TRUE, an interactive plot will be returned\n#'\n#'@return An interactive Pie and Donut plot\nggDonut=function(data=acs,donuts=\"Dx\",count=NULL,\n                 addDonutLabel=TRUE,showRatio=TRUE,\n                 polar=TRUE,labelposition=1,title=\"\",\n                 interactive=FALSE){\n        if(is.null(count)){\n                dat1=ddply(data,donuts,nrow)\n                colnames(dat1)[2]=\"n\"\n        } else{\n                dat1=data\n                colnames(dat1)[colnames(dat1)==count]=\"n\"\n        }\n                dat1$ymax=cumsum(dat1$n)\n                dat1$ymin=cumsum(dat1$n)-dat1$n\n                dat1$ypos=dat1$ymin+dat1$n/2\n                dat1$ratio=dat1$n*100/sum(dat1$n)\n                dat1$cumratio=dat1$ypos*100/sum(dat1$n)\n                dat1$hjust=ifelse((dat1$cumratio>25 & dat1$cumratio<75),0,1)\n                dat1$label=paste0(dat1[[donuts]],\"<br>\",dat1$n,\"(\",round(dat1$ratio,1),\"%)\")\n\n        mainCol=rainbow(nrow(dat1))\n        p<-ggplot(dat1) +\n                geom_rect_interactive(aes_string( ymax=\"ymax\", ymin=\"ymin\", xmax=\"4\", xmin=\"3\",\n                                                  tooltip=\"label\",data_id=donuts),fill=mainCol,colour=\"white\",alpha=0.7)+\n                coord_polar(theta=\"y\",start=3*pi/2)+\n                xlim(0,4+labelposition)+\n                theme_clean()\n\n        donutlabel=dat1[[donuts]]\n        if(showRatio)\n            donutlabel=paste0(donutlabel,\"\\n(\",round(dat1$ratio,1),\"%)\")\n\n        if(labelposition==1) {\n                p<- p+ geom_text(aes(label=donutlabel,x=4.3,y=ypos,hjust=hjust),size=3)+\n                                geom_segment(aes(x=4,xend=4.2,y=ypos,yend=ypos))\n        }  else{\n                p<- p+ geom_text(aes(label=donutlabel,x=3.5,y=ypos),size=3)\n        }\n        if(title!=\"\") p<-p+ggtitle(title)\n        if(interactive) p<-ggiraph(code=print(p))\n        p\n\n}\n\n#'Make a subcolors according to the mainCol\n#'\n#'@param .dta A data.frame\n#'@param main A character string of column name used as a main variable\n#'@param mainCol A main color\nsubcolors <- function(.dta,main,mainCol){\n        tmp_dta = cbind(.dta,1,'col')\n        tmp1 = unique(.dta[[main]])\n        for (i in 1:length(tmp1)){\n                tmp_dta$\"col\"[.dta[[main]] == tmp1[i]] = mainCol[i]\n        }\n        u <- unlist(by(tmp_dta$\"1\",tmp_dta[[main]],cumsum))\n        n <- dim(.dta)[1]\n        subcol=rep(rgb(0,0,0),n);\n        for(i in 1:n){\n                t1 = col2rgb(tmp_dta$col[i])/256\n                subcol[i]=rgb(t1[1],t1[2],t1[3],1/(1+u[i]))\n        }\n        return(subcol);\n}\n\n\n",
    "created" : 1465053118382.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1527454237",
    "id" : "BE9FBD03",
    "lastKnownWriteTime" : 1465056797,
    "last_content_update" : 1465056797836,
    "path" : "~/ownCloud/Documents/moonBook2/R/ggPieDonut.R",
    "project_path" : "R/ggPieDonut.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}